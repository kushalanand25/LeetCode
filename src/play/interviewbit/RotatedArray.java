package play.interviewbit;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class RotatedArray {
	// DO NOT MODIFY THE LIST
		public static int findMin(final List<Integer> a) {
		    int n = a.size();
		    int beg = 0;
		    int end = n-1;
		    int mid;
		    int prev, next;
		    
		    if(n == 1)
		        return a.get(0);
		    
		    while(beg < end){
	    	    if(a.get(beg) < a.get(end)){
//	    	        System.out.println("c1 ");
	    	        return a.get(beg);
	    	    } 
	    	    
	    	    mid = (beg+end)/2;
	    	    prev = (mid+n-1)%n;
	    	    next = (mid+1)%n;
	    	    if(a.get(mid) < a.get(prev) && a.get(mid) < a.get(next)){
//	    	        System.out.println("c2 ");  
	    	        return a.get(mid);
	    	    } else if(a.get(mid) <= a.get(end)) {
	    	        end = mid; 
//	    	        System.out.println("c3 "+mid);
	    	    } else if(a.get(mid) >= a.get(beg)) {
	    	        beg = mid+1; 
//	    	        System.out.println("c4 "+mid);
	    	    }
		    }  

	        return -1;	   
		}
		
		public static void main(String[] args) {
			String data
//			List<Integer> a = 
			
			ArrayList<Integer> al = (ArrayList<Integer>) Arrays.asList(data.split("[\\s]"))
										.stream()
										.map(Integer::parseInt)
										.collect(Collectors.toList());
			System.out.println(findMin(al));
//			System.out.println(al.indexOf(23));
		}
}
